/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package theme;

import dao.IBillsDAO;
import dao.IBillsDetailDAO;
import dao.IBooksDAO;
import dao.impl.BiilsDAO;
import dao.impl.BillsDetailDAO;
import dao.impl.BookDAO;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import models.Bills;
import models.BillsDetail;
import models.Book;
import utils.Myultis;

/**
 *
 * @author phamh
 */
public class JLogBillsDetail extends javax.swing.JDialog {

    /**
     * Creates new form JLogBillsDetail
     */
    private List<BillsDetail> listBillDetail = new ArrayList<>();
    private DefaultTableModel defaultTableModel;
    private IBillsDetailDAO billsDetailDAO;
    private BillsDetail billsDetail;
    private int c;

    public JLogBillsDetail(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        billsDetailDAO = new BillsDetailDAO();
        initComponents();
    }

    private void preapareGUI() {
        defaultTableModel = new DefaultTableModel();
        defaultTableModel.addColumn("Id");
        defaultTableModel.addColumn("Mã sách");
        defaultTableModel.addColumn("Tên sách");
        defaultTableModel.addColumn("Nhà xuất bản");
        defaultTableModel.addColumn("Tình trạng");
        defaultTableModel.addColumn("Số lượng");
    }

    public void loadData(int id) {
        c = 0;
        preapareGUI();
        listBillDetail = billsDetailDAO.getAll(id);
        Vector v;
        String tId = String.valueOf(id);
        boolean check = false;
        lbBillId.setText(tId);

        for (BillsDetail billsDetail : listBillDetail) {
            v = new Vector();
            v.add(billsDetail.getBookId());
            v.add(billsDetail.getBookCode());
            v.add(billsDetail.getBookName());
            v.add(billsDetail.getPublicser());
            switch (billsDetail.getStatus()) {
                case 1:
                    v.add("Đã trả");
                    c++;
                    break;
                case 0:
                    v.add("Chưa trả");
                    break;
                case 2:
                    v.add("Trả thiêu");
                    break;
                default:
                    break;
            }
            v.add(billsDetail.getQuantity());

            defaultTableModel.addRow(v);
        }

        if (listBillDetail.size() == c) {
            IBillsDAO billsDAO = new BiilsDAO();
            Bills bills = new Bills();
            bills.setBillsId(id);
            bills.setStatus(1);
            billsDAO.updateStatus(bills);
        }
        
        jTable1.setModel(defaultTableModel);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jmStt1 = new javax.swing.JMenuItem();
        jmStt2 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        lbBillId = new javax.swing.JLabel();

        jmStt1.setText("Đã trả");
        jmStt1.setActionCommand("");
        jmStt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmStt1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jmStt1);

        jmStt2.setText("Trả thiếu");
        jmStt2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmStt2ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jmStt2);

        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.TOOLKIT_EXCLUDE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sách", "Tên sách", "Nhà xuất bản", "Tình trạng", "Số lượng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Mã phiếu:");

        lbBillId.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 706, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbBillId, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(54, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbBillId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        if (evt.isPopupTrigger()) {
            jPopupMenu1.show(jTable1, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jTable1MouseReleased

    private void jmStt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmStt1ActionPerformed
        if (jTable1.getSelectedRow() != -1) {
            billsDetail = new BillsDetail();
            IBooksDAO bookDAO = new BookDAO();
            Book book = new Book();
            int bookId = Integer.valueOf(defaultTableModel.getValueAt(jTable1.getSelectedRow(), 0).toString());
            int quantity = Integer.valueOf(defaultTableModel.getValueAt(jTable1.getSelectedRow(), 5).toString());
            book.setBookId(bookId);
            
            int billId = Integer.valueOf(lbBillId.getText());
            billsDetail.setBillId(billId);
            billsDetail.setBookId(bookId);
            billsDetail.setStatus(1);
            billsDetailDAO.update(billsDetail);
            bookDAO.updatePlusQuantity(book, quantity);
            Myultis.clearTable(defaultTableModel);
            loadData(billId);
        }
    }//GEN-LAST:event_jmStt1ActionPerformed

    private void jmStt2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmStt2ActionPerformed
        if (jTable1.getSelectedRow() != -1) {
            billsDetail = new BillsDetail();
            int bookId = Integer.valueOf(defaultTableModel.getValueAt(jTable1.getSelectedRow(), 0).toString());
            int billId = Integer.valueOf(lbBillId.getText());
            billsDetail.setBillId(billId);
            billsDetail.setBookId(bookId);
            billsDetail.setStatus(2);
            billsDetailDAO.update(billsDetail);
            Myultis.clearTable(defaultTableModel);
            loadData(billId);
        }

    }//GEN-LAST:event_jmStt2ActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(JLogBillsDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(JLogBillsDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(JLogBillsDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(JLogBillsDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                JLogBillsDetail dialog = new JLogBillsDetail(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JMenuItem jmStt1;
    private javax.swing.JMenuItem jmStt2;
    private javax.swing.JLabel lbBillId;
    // End of variables declaration//GEN-END:variables
}
